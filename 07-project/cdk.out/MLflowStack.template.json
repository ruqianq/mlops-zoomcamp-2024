{
 "Parameters": {
  "ProjectName": {
   "Type": "String"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "TASKROLEA2089027": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonECS_FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/TASKROLE/Resource"
   }
  },
  "DBSECRETE6F61AC6": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "PasswordLength": 20
    },
    "Name": "dbPassword"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MLflowStack/DBSECRET/Resource"
   }
  },
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/24",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/Resource"
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/28",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet1/Subnet"
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet1/RouteTable"
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet1/DefaultRoute"
   }
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet1/EIP"
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet1/NATGateway"
   }
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.16/28",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet2/Subnet"
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet2/RouteTable"
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PublicSubnet2/DefaultRoute"
   }
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.32/28",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet1/Subnet"
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet1/RouteTable"
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.48/28",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet2/Subnet"
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet2/RouteTable"
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "VPCDBSubnet1Subnet5E0CF118": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.64/28",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "DB"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/DBSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/DBSubnet1/Subnet"
   }
  },
  "VPCDBSubnet1RouteTableD25F5A48": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/DBSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/DBSubnet1/RouteTable"
   }
  },
  "VPCDBSubnet1RouteTableAssociationDC8481F9": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCDBSubnet1RouteTableD25F5A48"
    },
    "SubnetId": {
     "Ref": "VPCDBSubnet1Subnet5E0CF118"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/DBSubnet1/RouteTableAssociation"
   }
  },
  "VPCDBSubnet2SubnetDABA49CF": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.80/28",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "DB"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/DBSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/DBSubnet2/Subnet"
   }
  },
  "VPCDBSubnet2RouteTable51E969F8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC/DBSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/DBSubnet2/RouteTable"
   }
  },
  "VPCDBSubnet2RouteTableAssociationF6FBF57B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCDBSubnet2RouteTable51E969F8"
    },
    "SubnetId": {
     "Ref": "VPCDBSubnet2SubnetDABA49CF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/DBSubnet2/RouteTableAssociation"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MLflowStack/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/VPCGW"
   }
  },
  "VPCS3Endpoint18C9C7CA": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
     },
     {
      "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
     },
     {
      "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
     },
     {
      "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
     },
     {
      "Ref": "VPCDBSubnet1RouteTableD25F5A48"
     },
     {
      "Ref": "VPCDBSubnet2RouteTable51E969F8"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/VPC/S3Endpoint/Resource"
   }
  },
  "ARTIFACTBUCKET3AC4D6FF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "ProjectName"
       },
       "-artifacts-",
       {
        "Ref": "AWS::AccountId"
       }
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MLflowStack/ARTIFACTBUCKET/Resource"
   }
  },
  "SGRDS8D02E925": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "MLflowStack/SGRDS",
    "GroupName": "sg_rds",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "10.0.0.0/24",
      "Description": "from 10.0.0.0/24:3306",
      "FromPort": 3306,
      "IpProtocol": "tcp",
      "ToPort": 3306
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/SGRDS/Resource"
   }
  },
  "MYSQLSubnetGroup5B5FBC17": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for MYSQL database",
    "SubnetIds": [
     {
      "Ref": "VPCDBSubnet1Subnet5E0CF118"
     },
     {
      "Ref": "VPCDBSubnet2SubnetDABA49CF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MYSQL/SubnetGroup/Default"
   }
  },
  "MYSQLDA998D0F": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.m5.large",
    "DBName": "mlflowdb",
    "DBSubnetGroupName": {
     "Ref": "MYSQLSubnetGroup5B5FBC17"
    },
    "DeletionProtection": false,
    "Engine": "mysql",
    "EngineVersion": "8.0.34",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DBSECRETE6F61AC6"
       },
       ":SecretString:::}}"
      ]
     ]
    },
    "MasterUsername": "master",
    "Port": "3306",
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "SGRDS8D02E925",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MYSQL/Resource"
   }
  },
  "CLUSTERCDDEBBE4": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "mlflow"
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/CLUSTER/Resource"
   }
  },
  "MLflowDDA9BA68": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "BUCKET",
        "Value": {
         "Fn::Join": [
          "",
          [
           "s3://",
           {
            "Ref": "ARTIFACTBUCKET3AC4D6FF"
           }
          ]
         ]
        }
       },
       {
        "Name": "HOST",
        "Value": {
         "Fn::GetAtt": [
          "MYSQLDA998D0F",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "PORT",
        "Value": "3306"
       },
       {
        "Name": "DATABASE",
        "Value": "mlflowdb"
       },
       {
        "Name": "USERNAME",
        "Value": "master"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:e709191b48981a81f0e846a81872306a17f8e83454e128e8c7b69d43e44c367d"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "MLflowContainerLogGroupACBF29FF"
        },
        "awslogs-stream-prefix": "mlflow",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "Container",
      "PortMappings": [
       {
        "ContainerPort": 5000,
        "HostPort": 5000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "PASSWORD",
        "ValueFrom": {
         "Ref": "DBSECRETE6F61AC6"
        }
       }
      ]
     }
    ],
    "Cpu": "4096",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "MLflowExecutionRoleB8ECF96D",
      "Arn"
     ]
    },
    "Family": "MLflowStackMLflow45730B75",
    "Memory": "8192",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TASKROLEA2089027",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLflow/Resource"
   }
  },
  "MLflowContainerLogGroupACBF29FF": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLflow/Container/LogGroup/Resource"
   }
  },
  "MLflowExecutionRoleB8ECF96D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLflow/ExecutionRole/Resource"
   }
  },
  "MLflowExecutionRoleDefaultPolicy23CB19EA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MLflowContainerLogGroupACBF29FF",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "DBSECRETE6F61AC6"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MLflowExecutionRoleDefaultPolicy23CB19EA",
    "Roles": [
     {
      "Ref": "MLflowExecutionRoleB8ECF96D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLflow/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "MLFLOWLB7B85C32A": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "Subnets": [
     {
      "Ref": "VPCPublicSubnet1SubnetB4246D30"
     },
     {
      "Ref": "VPCPublicSubnet2Subnet74179F39"
     }
    ],
    "Type": "network"
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/LB/Resource"
   }
  },
  "MLFLOWLBPublicListener92B8F85A": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "MLFLOWLBPublicListenerECSGroupFAEEFBE6"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "MLFLOWLB7B85C32A"
    },
    "Port": 80,
    "Protocol": "TCP"
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/LB/PublicListener/Resource"
   }
  },
  "MLFLOWLBPublicListenerECSGroupFAEEFBE6": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "TCP",
    "TargetType": "ip",
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "MLFLOWServiceFC39EF8E": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "CLUSTERCDDEBBE4"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "Container",
      "ContainerPort": 5000,
      "TargetGroupArn": {
       "Ref": "MLFLOWLBPublicListenerECSGroupFAEEFBE6"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "MLFLOWServiceSecurityGroup224B1FDD",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
       },
       {
        "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
       }
      ]
     }
    },
    "ServiceName": "mlflow",
    "TaskDefinition": {
     "Ref": "MLflowDDA9BA68"
    }
   },
   "DependsOn": [
    "MLFLOWLBPublicListenerECSGroupFAEEFBE6",
    "MLFLOWLBPublicListener92B8F85A",
    "TASKROLEA2089027"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/Service/Service"
   }
  },
  "MLFLOWServiceSecurityGroup224B1FDD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "MLflowStack/MLFLOW/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "VPCB9E5F0B4",
        "CidrBlock"
       ]
      },
      "Description": "Allow inbound from VPC for mlflow",
      "FromPort": 5000,
      "IpProtocol": "tcp",
      "ToPort": 5000
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "DependsOn": [
    "TASKROLEA2089027"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/Service/SecurityGroup/Resource"
   }
  },
  "MLFLOWServiceTaskCountTarget5798B92F": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 2,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "CLUSTERCDDEBBE4"
       },
       "/",
       {
        "Fn::GetAtt": [
         "MLFLOWServiceFC39EF8E",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "TASKROLEA2089027"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/Service/TaskCount/Target/Resource"
   }
  },
  "MLFLOWServiceTaskCountTargetAUTOSCALINGE4A5776E": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "MLflowStackMLFLOWServiceTaskCountTargetAUTOSCALING9D7B2DB0",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "MLFLOWServiceTaskCountTarget5798B92F"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 70
    }
   },
   "DependsOn": [
    "TASKROLEA2089027"
   ],
   "Metadata": {
    "aws:cdk:path": "MLflowStack/MLFLOW/Service/TaskCount/Target/AUTOSCALING/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VTTW/jIBD9Lb0TdtPsYa/56FaRqq7lRL1GY0xd1jZYMCSKLP/3HcB20vbE481jhnkDj3z56zf/+QAXtxBlvWhUwfsDgqjZ9l1nYKGVKC2j+KlX0PI+N40MsbhmplHiGqURDcxJYSW6FjRU0lKuuA+KhAYmxSPv3zoRuLdsyzJf0NGDL/Som1FuPMojFKlg4m/c2jkjFKAyehYH8LTPwvIK+AwoL3BlmVVngrfEe009EZ4E6Sbjbo3U/kcrNbKRocs+6bIzSuMonbfUlLcKr8/W+G7s8kaQHSveb7yoU92EBmZLx/sdIBTg5F47BC0kS/ebM+0234hJGkykDNvGuzAcik3wD9gKgkGu3sl3pdVkz1fGaASlpb3jxrMHac9KJMtHeBDQBMtDkq3xOk7RnsA5GjXfGerK7lsa+DowIcZz2Rmn0Njrhnpkjanowi+mmruZcOzl1AGGkTj+KvFibP1ioNxQUWq2/HIv2YBDJRpSFFGhdHWmJ/X9pE117vaTRpFZeoxPeIwdqdqd6XfbgUHX0VONTw48Gke2UHF65LM/QRyd+8yk5WjpX9GBQzp3+zyfiGFguXTGW+o1+knfsaJoEP712Pn0NyZJGL7RZRzhwLIrfhj9Y8WXS756+OeUWlial2olz9P6H+QkXOzyAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "MLflowStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "MLFLOWLoadBalancerDNSAEFB7E43": {
   "Value": {
    "Fn::GetAtt": [
     "MLFLOWLB7B85C32A",
     "DNSName"
    ]
   }
  },
  "LoadBalancerDNS": {
   "Value": {
    "Fn::GetAtt": [
     "MLFLOWLB7B85C32A",
     "DNSName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}
